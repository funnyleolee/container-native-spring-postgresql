apiVersion: v1
kind: Deployment
metadata:
  name: product-catalog
spec:
  triggers:
    -
      type: ConfigChange
    -
      type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - product-catalog
        from:
          kind: ImageStreamTag
          namespace: product
          name: 'product-catalog:latest'
  replicas: 1
  template:
    metadata:
      labels:
        app: product-catalog      
    spec:
      initContainers:
      - args: ['-c', "csplit -z -f crt- $ca_bundle '/-----BEGIN CERTIFICATE-----/' '{*}' && for file in crt-*; do keytool -import -noprompt -keystore $truststore_jks -file $file -storepass changeit -alias service-$file; done"]
        name: pem-to-truststore
        image: registry.access.redhat.com/redhat-sso-7/sso71-openshift:1.1-16
        env:
          - name: ca_bundle
            value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
          - name: truststore_jks
            value: /var/run/secrets/java.io/keystores/truststore.jks
          - name: password
            value: changeit    
        command: ['/bin/bash']
        volumeMounts:
          - name: keystore-volume
            mountPath: /var/run/secrets/java.io/keystores 
      containers:
      - name: product-catalog
        image: "product/product-catalog:latest"
        imagePullPolicy: Always
        env:     
        - name: JAVA_OPTIONS
          value: -Dspring.profiles.active=openshift -Djavax.net.ssl.trustStore=/var/run/secrets/java.io/keystores/truststore.jks -Djavax.net.ssl.trustStorePassword=changeit                      
        volumeMounts:
        - name: keystore-volume
          mountPath: /var/run/secrets/java.io/keystores

 
          
      volumes:
      - name: keystore-volume
        emptyDir: {}         
      - name: istio-envoy
        emptyDir:
          medium: Memory
          sizeLimit: "0"
      - name: istio-certs
        secret:
          optional: true
          secretName: istio.default